name: CI/CD Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-and-test:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET 9
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore --configuration Release

      - name: Run tests
        run: dotnet test --no-build --configuration Release

  build-and-push:
    name: Build & Push Docker Image
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup GitVersion
        id: gitver                 
        uses: gittools/actions/gitversion/setup@v0.9.14
        with:
          versionSpec: '5.x'

      - name: Determine SemVer
        run: |
          echo "IMAGE_TAG=${{ steps.gitver.outputs.fullSemVer }}" >> $GITHUB_ENV

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build & Tag Image
        run: |
          IMAGE=${{ secrets.DOCKERHUB_USERNAME }}/todo
          TAG=${{ env.IMAGE_TAG }}
          docker build -t $IMAGE:$TAG -t $IMAGE:latest ./CI_CD_TEST

      - name: Push both tags
        run: |
          IMAGE=${{ secrets.DOCKERHUB_USERNAME }}/todo
          TAG=${{ env.IMAGE_TAG }}
          docker push $IMAGE:$TAG
          docker push $IMAGE:latest
          
  deploy:
    name: Deploy via SSH & Compose
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key.pem
          chmod 600 ~/.ssh/deploy_key.pem

      - name: Deploy via SSH & Compose
        run: |
          ssh -i ~/.ssh/deploy_key.pem \
            -o StrictHostKeyChecking=no \
            ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} \
            "cd /home/ubuntu/CI_CD_TEST_TODO/CI_CD_TEST && \
             docker-compose down --volumes && \
             docker rmi ${{ secrets.DOCKERHUB_USERNAME }}/todo:latest || true && \
             docker-compose pull api && \
             docker-compose up -d --force-recreate api"
