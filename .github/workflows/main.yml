name: CI/CD Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-and-test:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET 9
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore --configuration Release

      - name: Run tests
        run: dotnet test --no-build --configuration Release

  build-and-push:
    name: Build & Push Docker Image 
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set IMAGE_TAG = v{run_number}
        run: |
          echo "IMAGE_TAG=v${{ github.run_number }}" >> $GITHUB_ENV

      - name: Log the tag for debug
        run: echo "Will build with tag ${{ env.IMAGE_TAG }} and latest"

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build & push
        uses: docker/build-push-action@v4
        with:
          context: ./CI_CD_TEST 
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/todo:${{ env.IMAGE_TAG }}
            ${{ secrets.DOCKERHUB_USERNAME }}/todo:latest
          
      - name: Output final image list
        run: docker images ${{ secrets.DOCKERHUB_USERNAME }}/todo
          
  deploy:
    name: Deploy via SSH & Compose
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key.pem
          chmod 600 ~/.ssh/deploy_key.pem

      - name: Deploy via SSH & Compose
        run: |
          ssh -i ~/.ssh/deploy_key.pem \
            -o StrictHostKeyChecking=no \
            ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} \
            "cd /home/ubuntu/CI_CD_TEST_TODO/CI_CD_TEST && \
             docker-compose down --volumes && \
             docker rmi ${{ secrets.DOCKERHUB_USERNAME }}/todo:latest || true && \
             docker-compose pull api && \
             docker-compose up -d --force-recreate api"
