name: CI/CD Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-and-test:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET 9
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore --configuration Release

      - name: Run tests
        run: dotnet test --no-build --configuration Release

  build-and-push:
    name: Build & Push Image
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: List repository structure
        run: ls -R

      - name: Login to DockerÂ Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build & Push Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/todo:latest ./CI_CD_TEST/
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/todo:latest

  deploy:
    name: Deploy via SSH & Compose
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key.pem
          chmod 600 ~/.ssh/deploy_key.pem

      - name: Deploy via Docker Compose (clean volumes)
        run: |
          ssh -i ~/.ssh/deploy_key.pem \
            -o StrictHostKeyChecking=no \
            ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
          cd /home/ubuntu/CI_CD_TEST_TODO/CI_CD_TEST
          docker-compose down --volumes
          docker system prune -a --volumes -f
          docker-compose pull api
          docker-compose up -d --force-recreate api
